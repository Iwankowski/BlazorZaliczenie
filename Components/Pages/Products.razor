@page "/"
@page "/products"
@using BlazorApp2_Iwankowski.Data
@using BlazorApp2_Iwankowski.Services
@using Microsoft.AspNetCore.Components
@rendermode InteractiveServer
@inject WarehouseService WarehouseService
@inject StorageLocationService StorageLocationService
@inject NavigationManager Navigation

<div class="container-fluid mt-4">
    <div class="card shadow-sm">
        <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
            <h5 class="mb-0">Produkty</h5>
            <button class="btn btn-light btn-sm" @onclick='() => Navigation.NavigateTo("products/add")'>
                <i class="bi bi-plus-circle"></i> Dodaj produkt
            </button>
        </div>
        <div class="card-body">
            @if (error != null)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    <i class="bi bi-exclamation-triangle me-2"></i>
                    @error
                    <button type="button" class="btn-close" @onclick="() => error = null"></button>
                </div>
            }

            @if (items == null)
            {
                <div class="text-center">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">£adowanie...</span>
                    </div>
                </div>
            }
            else if (!items.Any())
            {
                <div class="alert alert-info">
                    <i class="bi bi-info-circle me-2"></i>
                    Brak produktów w magazynie.
                </div>
            }
            else
            {
                <div class="table-responsive">
                    <table class="table table-striped table-hover align-middle">
                        <thead>
                            <tr>
                                <th>Nazwa</th>
                                <th>Iloœæ</th>
                                <th>Cena</th>
                                <th>Magazyn</th>
                                <th>Akcje</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in items)
                            {
                                <tr>
                                    <td>@item.Name</td>
                                    <td>@item.Quantity</td>
                                    <td>@item.Price.ToString("C2")</td>
                                    <td>@(item.StorageLocation?.Name ?? "Nie przypisano")</td>
                                    <td>
                                        <button class="btn btn-outline-primary btn-sm me-2" @onclick='() => Navigation.NavigateTo($"products/edit/{item.Id}")'>
                                            <i class="bi bi-pencil"></i>
                                        </button>
                                        <button class="btn btn-outline-danger btn-sm" @onclick="() => ShowDeleteDialog(item)">
                                            <i class="bi bi-trash"></i>
                                        </button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
        </div>
    </div>
</div>

@if (showDeleteDialog)
{
    <div class="modal fade show" style="display: block;" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">PotwierdŸ usuniêcie</h5>
                    <button type="button" class="btn-close" @onclick="CloseDeleteDialog"></button>
                </div>
                <div class="modal-body">
                    <p>Czy na pewno chcesz usun¹æ produkt "@deletingItem?.Name"?</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" @onclick="CloseDeleteDialog">Anuluj</button>
                    <button type="button" class="btn btn-danger" @onclick="ConfirmDelete">Usuñ</button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal-backdrop fade show"></div>
}

@code {
    private List<WarehouseItem>? items;
    private string? error;
    private bool showDeleteDialog;
    private WarehouseItem? deletingItem;

    protected override async Task OnInitializedAsync()
    {
        await LoadItems();
    }

    private async Task LoadItems()
    {
        try
        {
            error = null;
            items = await WarehouseService.GetAllAsync();
        }
        catch (Exception ex)
        {
            error = "B³¹d podczas ³adowania danych: " + ex.Message;
        }
    }

    private void ShowDeleteDialog(WarehouseItem item)
    {
        deletingItem = item;
        showDeleteDialog = true;
    }

    private void CloseDeleteDialog()
    {
        showDeleteDialog = false;
        deletingItem = null;
    }

    private async Task ConfirmDelete()
    {
        if (deletingItem != null)
        {
            try
            {
                await WarehouseService.DeleteAsync(deletingItem.Id);
                await LoadItems();
                CloseDeleteDialog();
            }
            catch (Exception ex)
            {
                error = "B³¹d podczas usuwania: " + ex.Message;
                CloseDeleteDialog();
            }
        }
    }
}